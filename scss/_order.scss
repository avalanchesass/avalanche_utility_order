/* extract utility_order.css */
/*---
title:   Order
section: Utility
---

Reorder elements.

```example:html
<div style="display: flex;">
  <div style="background: grey; padding: 0.5em;">Item 1</div>
  <div style="background: grey; padding: 0.5em;">Item 2</div>
  <div class="u-order-start@m" style="background: grey; padding: 0.5em;">Item 3</div>
  <div class="u-order-1@m" style="background: grey; padding: 0.5em;">Item 4</div>
  <div class="u-order-end@m" style="background: grey; padding: 0.5em;">Item 5</div>
  <div style="background: grey; padding: 0.5em;">Item 6</div>
  <div style="background: grey; padding: 0.5em;">Item 7</div>
</div>
```
*/
/**
 * Variables
 */
$u-order-steps: 8 !default;

// Breakpoints
$u-order-breakpoints: (m) !default;

/**
 * Mixins
 */
@mixin u-order($-order: 1, $-order-steps: $u-order-steps) {
  order: $-order - $-order-steps;
}

@mixin u-order-start($-order: -9999) {
  order: $-order;
}

@mixin u-order-end($-order: 9999) {
  order: $-order;
}



@each $-breakpoint in $u-order-breakpoints {
  @for $-i from 1 through $u-order-steps {
    @media (min-width: map-get($breakpoints, $-breakpoint)) {
      .u-order-#{$-i}\@#{$-breakpoint} {
        @include u-order($-i);
      }
    }
  }

  @media (min-width: map-get($breakpoints, $-breakpoint)) {
    .u-order-start\@#{$-breakpoint} {
      @include u-order-start();
    }
  }

  @media (min-width: map-get($breakpoints, $-breakpoint)) {
    .u-order-end\@#{$-breakpoint} {
      @include u-order-end();
    }
  }
}
/* end extract utility_order.css */
